# topmark:header:start
#
#   project      : TopMark
#   file         : ci.yml
#   file_relpath : .github/workflows/ci.yml
#   license      : MIT
#   copyright    : (c) 2025 Olivier Biot
#
# topmark:header:end

name: CI

on:
    pull_request:
        paths:
            - "src/**"
            - "tests/**"
            - "tools/**"
            - "docs/**"
            - "mkdocs.yml"
            - "constraints.txt"
            - "pyproject.toml"
    push:
        branches: [main]
        tags:
            - "v*"

jobs:
    # Detect what changed in the PR so we can cheaply gate jobs.
    changes:
        if: ${{ github.event_name == 'pull_request' }}
        runs-on: ubuntu-latest
        outputs:
            src_changed: ${{ steps.filter.outputs.src }}
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0
            - id: filter
              uses: dorny/paths-filter@v3
              with:
                  filters: |
                      src:
                        - 'src/**'
                        - 'tests/**'
                        - 'tools/**'
            - run: echo "src_changed=${{ steps.filter.outputs.src }}"

    lint:
        runs-on: ubuntu-latest
        timeout-minutes: 20
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-python@v5
              with:
                  python-version: "3.13"
                  cache: pip
                  cache-dependency-path: |
                      requirements-*.txt
                      constraints.txt
            - name: Install dev toolchain (locked)
              run: |
                  python -m pip install -U pip
                  pip install -r requirements-dev.txt
            - name: Lint & types
              run: |
                  ruff format --check .
                  ruff check .
                  pyright
            - name: Header policy check (TopMark)
              run: pre-commit run topmark-check --all-files
            - name: Custom docstring checks
              run: python tools/check_docstring_links.py --stats

    docs:
        runs-on: ubuntu-latest
        timeout-minutes: 20
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-python@v5
              with:
                  python-version: "3.13"
                  cache: pip
                  cache-dependency-path: |
                      requirements-*.txt
                      constraints.txt
            - name: Install docs toolchain (locked)
              run: |
                  python -m pip install -U pip
                  pip install -c constraints.txt -e .[docs]
            - name: Build docs (strict)
              run: mkdocs build --strict

    tests:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                python-version: ["3.10", "3.11", "3.12", "3.13", "3.14"]
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-python@v5
              with:
                  python-version: ${{ matrix.python-version }}
                  allow-prereleases: true
                  cache: pip
                  cache-dependency-path: |
                      requirements-*.txt
                      constraints.txt
            - name: Install dev deps
              run: |
                  python -m pip install -U pip
                  pip install -r requirements-dev.txt
                  pip install -c constraints.txt -e .[test]
            - name: Run tox tests for ${{ matrix.python-version }}
              run: |
                  case "${{ matrix.python-version }}" in
                    "3.10") tox -e py310 ;;
                    "3.11") tox -e py311 ;;
                    "3.12") tox -e py312 ;;
                    "3.13") tox -e py313 ;;
                    "3.14") tox -e py314 ;;
                  esac

    dev-validation:
        name: Dev validation (TOPMARK_VALIDATE=1)
        # Fast, PR-only check that runs ONLY when src/** changed.
        needs: changes
        if: ${{ github.event_name == 'pull_request' && needs.changes.outputs.src_changed == 'true' }}
        runs-on: ubuntu-latest
        timeout-minutes: 5
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-python@v5
              with:
                  python-version: "3.13"
                  cache: pip
                  cache-dependency-path: |
                      requirements-*.txt
                      constraints.txt
            - run: |
                  python -m pip install -U pip
                  pip install -r requirements-dev.txt
                  pip install -c constraints.txt -e .[test]
            - run: TOPMARK_VALIDATE=1 pytest -q -m dev_validation

    api-snapshot:
        name: API Snapshot
        # Fast, PR-only check that runs ONLY when src/** changed.
        needs: changes
        if: ${{ github.event_name == 'pull_request' && needs.changes.outputs.src_changed == 'true' }}
        runs-on: ubuntu-latest
        timeout-minutes: 5
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-python@v5
              with:
                  python-version: "3.13"
                  cache: pip
                  cache-dependency-path: |
                      requirements-*.txt
                      constraints.txt
            - name: Install minimal deps for API check
              run: |
                  python -m pip install -U pip
                  # Only what the API snapshot env needs (keep it lean and quick)
                  pip install -r requirements-dev.txt
            - name: Run API snapshot check
              run: tox -e py313-api

    links:
        # Use official lychee Action; no cargo needed
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Check links in docs and top-level Markdown
              uses: lycheeverse/lychee-action@v1
              with:
                  args: >-
                      --config lychee.toml
                      --no-progress
                      --verbose
                      docs
                      *.md
