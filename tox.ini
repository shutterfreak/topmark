# topmark:header:start
#
#   project      : TopMark
#   file         : tox.ini
#   file_relpath : tox.ini
#   license      : MIT
#   copyright    : (c) 2025 Olivier Biot
#
# topmark:header:end

[tox]
min_version = 4.0
env_list =
    py310, py311, py312, py313, py314,
    py310-typecheck, py311-typecheck, py312-typecheck, py313-typecheck, py314-typecheck,
    # py310-api, py311-api, py312-api, py313-api, py314-api,
    # property-test, # Do not run this environment by default
    lint, format-check, docs, links

isolated_build = true            # respects PEP 517/518 if you use them
skip_missing_interpreters = false

[testenv]
package = skip # Do not build packages in test environments
usedevelop = true                # Use the source tree directly, no egg-link
deps = -r requirements-dev.txt   # pytest, mypy â€¦ already in there
commands =
    pytest -q tests -m "not hypothesis_slow"

# --- Hypothesis property test env (Developer only) ---
[testenv:property-test]
description = Run the long-running property tests only
# Inherit everything from the default environment
package = skip
usedevelop = true
deps = -r requirements-dev.txt
# Ensure you install hypothesis here if it's not already in requirements-dev.txt
# deps = hypothesis
commands =
    # ONLY run the specific file, without any exclusion marker
    pytest -vv tests/pipeline/test_header_bounds_property.py
labels = local-only

# --- per-Python Pyright envs ---
[testenv:py310-typecheck]
description = Run pyright type checks on Python 3.10
basepython = python3.10
commands = pyright --pythonversion 3.10

[testenv:py311-typecheck]
description = Run pyright type checks on Python 3.11
basepython = python3.11
commands = pyright --pythonversion 3.11

[testenv:py312-typecheck]
description = Run pyright type checks on Python 3.12
basepython = python3.12
commands = pyright --pythonversion 3.12

[testenv:py313-typecheck]
description = Run pyright type checks on Python 3.13
basepython = python3.13
commands = pyright --pythonversion 3.13

[testenv:py314-typecheck]
description = Run pyright type checks on Python 3.14
basepython = python3.14
commands = pyright --pythonversion 3.14

# ---------- Utility envs ----------
[testenv:lint]
description = Run static linters (ruff + pydoclint)
deps = -r requirements-dev.txt
allowlist_externals =
    sh
    git
    xargs
commands =
    ruff check .
    sh -c "git ls-files '*.py' | xargs -r pydoclint -q"

[testenv:lint-fixall]
description = Run ruff with --fix
deps = -r requirements-dev.txt
commands =
    ruff check --fix .
labels = local-only

[testenv:format-check]
description = Check formatting for code, markdown and toml
deps = -r requirements-dev.txt
allowlist_externals =
    sh
    git
    xargs
commands =
    ruff format --check .
    sh -c "git ls-files '*.md' | xargs -r mdformat --check"
    taplo format --check .

[testenv:format]
description = Format code, markdown, and toml (auto-fix)
deps = -r requirements-dev.txt
allowlist_externals =
    sh
    git
    xargs
commands =
    ruff format .
    sh -c "git ls-files '*.md' | xargs -r mdformat"
    taplo format .
labels = local-only

[testenv:docs]
description = Build documentation in strict mode
deps = -r requirements-docs.txt
commands = mkdocs build --strict

[testenv:docs-serve]
description = Serve the docs locally (dev only)
deps = -r requirements-docs.txt
commands = mkdocs serve
labels = local-only

[testenv:links]
description = Check links in docs/ and *.md via lychee (requires CLI lychee)
passenv = *
allowlist_externals = lychee
commands =
    lychee --config lychee.toml --no-progress --verbose docs *.md

[testenv:links-src]
description = Check links found in Python docstrings under src/ via lychee
passenv = *
allowlist_externals = find
commands =
    find src -type f -name '*.py' -print0 | xargs -0 -r lychee --config lychee.toml --no-progress --verbose
labels = local-only

[testenv:links-all]
description = Check links in docs/, *.md, and Python docstrings via lychee
passenv = *
allowlist_externals = find
commands =
    find src -type f -name '*.py' -print0 | xargs -0 -r lychee --config lychee.toml --no-progress --verbose
    lychee --config lychee.toml --no-progress --verbose docs *.md
labels = local-only

[testenv:docstring-links]
description = Enforce docstring link style
deps = -r requirements-dev.txt
commands = python tools/check_docstring_links.py --stats
labels = local-only


# --- API snapshot check per Python version ---
[testenv:py310-api]
description = Run only the API snapshot test on Python 3.10
basepython = python3.10
deps = -r requirements-dev.txt
commands = pytest -vv tests/api/test_public_api_snapshot.py
labels = api-check

[testenv:py311-api]
description = Run only the API snapshot test on Python 3.11
basepython = python3.11
deps = -r requirements-dev.txt
commands = pytest -vv tests/api/test_public_api_snapshot.py
labels = api-check

[testenv:py312-api]
description = Run only the API snapshot test on Python 3.12
basepython = python3.12
deps = -r requirements-dev.txt
commands = pytest -vv tests/api/test_public_api_snapshot.py
labels = api-check

[testenv:py313-api]
description = Run only the API snapshot test on Python 3.13
basepython = python3.13
deps = -r requirements-dev.txt
commands = pytest -vv tests/api/test_public_api_snapshot.py
labels = api-check

[testenv:py314-api]
description = Run only the API snapshot test on Python 3.14
basepython = python3.14
deps = -r requirements-dev.txt
commands = pytest -vv tests/api/test_public_api_snapshot.py
labels = api-check
